workspace(name = "testing_python")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Needed by com_github_grpc_grpc; Matches
# https://github.com/grpc/grpc/blob/v1.59.3/bazel/grpc_deps.bzl#L384.
http_archive(
    name = "upb",
    sha256 = "5147e0ab6a28421d1e49004f4a205d84f06b924585e15eaa884cfe13289165b7",
    strip_prefix = "upb-42cd08932e364a4cde35033b73f15c30250d7c2e",
    urls = [
        # https://github.com/protocolbuffers/upb/commits/24.x
        "https://storage.googleapis.com/grpc-bazel-mirror/github.com/protocolbuffers/upb/archive/42cd08932e364a4cde35033b73f15c30250d7c2e.tar.gz",
        "https://github.com/protocolbuffers/upb/archive/42cd08932e364a4cde35033b73f15c30250d7c2e.tar.gz",
    ],
)

# Needed by com_github_grpc_grpc; Matches
# https://github.com/grpc/grpc/blob/v1.59.3/bazel/grpc_deps.bzl#L243
http_archive(
    name = "com_google_protobuf",
    patch_args = ["-p1"],
    patches = [
        "@com_github_grpc_grpc//third_party:protobuf.patch",
    ],
    sha256 = "660ce016f987550bc1ccec4a6ee4199afb871799b696227098e3641476a7d566",
    strip_prefix = "protobuf-b2b7a51158418f41cff0520894836c15b1738721",
    urls = [
        # https://github.com/protocolbuffers/protobuf/commits/v24.3
        "https://storage.googleapis.com/grpc-bazel-mirror/github.com/protocolbuffers/protobuf/archive/b2b7a51158418f41cff0520894836c15b1738721.tar.gz",
        "https://github.com/protocolbuffers/protobuf/archive/b2b7a51158418f41cff0520894836c15b1738721.tar.gz",
    ],
)

http_archive(
    name = "com_github_grpc_grpc",
    sha256 = "03ca78ecf847783ac6e895dc7a24834e86981bd8c5408cf86f6ccee886bd3079",
    strip_prefix = "grpc-1.59.3",
    urls = ["https://github.com/grpc/grpc/archive/refs/tags/v1.59.3.zip"],
)

http_archive(
    name = "rules_proto_grpc",
    sha256 = "2046e520077f77a87f82cf9bf28cf08a95198a0ef68bd3ce540f657a6b6808da",
    strip_prefix = "rules_proto_grpc-4.5.0",
    urls = ["https://github.com/rules-proto-grpc/rules_proto_grpc/archive/refs/tags/4.5.0.zip"],
)

http_archive(
    name = "tink_cc",
    strip_prefix = "tink-cc-main",
    urls = ["https://github.com/tink-crypto/tink-cc/archive/main.zip"],
)

http_archive(
    name = "tink_py",
    strip_prefix = "tink-py-main",
    urls = ["https://github.com/tink-crypto/tink-py/archive/main.zip"],
)

load("@tink_py//:tink_py_deps.bzl", "tink_py_deps")

tink_py_deps()

load("@tink_py//:tink_py_deps_init.bzl", "tink_py_deps_init")

tink_py_deps_init("tink_py")

load("@tink_py_pip_deps//:requirements.bzl", tink_py_install_pypi_deps = "install_deps")

tink_py_install_pypi_deps()

# gRPC.

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")

grpc_deps()

load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")

grpc_extra_deps()

# Rules Proto gRPC.

load("@rules_proto_grpc//:repositories.bzl", "rules_proto_grpc_repos", "rules_proto_grpc_toolchains")

rules_proto_grpc_toolchains()

rules_proto_grpc_repos()

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

load("@rules_proto_grpc//cpp:repositories.bzl", rules_proto_grpc_cpp_repos = "cpp_repos")

rules_proto_grpc_cpp_repos()

load("@rules_proto_grpc//python:repositories.bzl", rules_proto_grpc_python_repos = "python_repos")

rules_proto_grpc_python_repos()

load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(
    name = "rules_proto_grpc_py3_deps",
    python_interpreter = "python3",
    requirements = "@rules_proto_grpc//python:requirements.txt",
)

load("@rules_proto_grpc_py3_deps//:requirements.bzl", "install_deps")

install_deps()

pip_parse(
    name = "pip_deps",
    requirements_lock = "//:requirements.txt",
)

load("@pip_deps//:requirements.bzl", testing_server_deps_install = "install_deps")

testing_server_deps_install()
