load("@pip_deps//:requirements.bzl", "requirement")

package(
    default_testonly = 1,
    default_visibility = ["//:__subpackages__"],
)

licenses(["notice"])

py_test(
    name = "key_generation_consistency_test",
    srcs = ["key_generation_consistency_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/daead",
        "@tink_py//tink/hybrid",
        "@tink_py//tink/mac",
        "@tink_py//tink/prf",
        "@tink_py//tink/proto:common_py_pb2",
        "@tink_py//tink/proto:ecdsa_py_pb2",
        "@tink_py//tink/proto:jwt_hmac_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/signature",
    ],
)

py_test(
    name = "key_version_test",
    srcs = ["key_version_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/daead",
        "@tink_py//tink/mac",
        "@tink_py//tink/prf",
        "@tink_py//tink/proto:aes_cmac_prf_py_pb2",
        "@tink_py//tink/proto:aes_cmac_py_pb2",
        "@tink_py//tink/proto:aes_ctr_hmac_aead_py_pb2",
        "@tink_py//tink/proto:aes_eax_py_pb2",
        "@tink_py//tink/proto:aes_gcm_py_pb2",
        "@tink_py//tink/proto:aes_gcm_siv_py_pb2",
        "@tink_py//tink/proto:aes_siv_py_pb2",
        "@tink_py//tink/proto:chacha20_poly1305_py_pb2",
        "@tink_py//tink/proto:hkdf_prf_py_pb2",
        "@tink_py//tink/proto:hmac_prf_py_pb2",
        "@tink_py//tink/proto:hmac_py_pb2",
        "@tink_py//tink/proto:kms_aead_py_pb2",
        "@tink_py//tink/proto:kms_envelope_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/proto:xchacha20_poly1305_py_pb2",
    ],
)

py_test(
    name = "keyset_validation_test",
    srcs = ["keyset_validation_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/daead",
        "@tink_py//tink/hybrid",
        "@tink_py//tink/jwt",
        "@tink_py//tink/mac",
        "@tink_py//tink/prf",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/signature",
    ],
)

py_test(
    name = "aead_test",
    srcs = ["aead_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        requirement("protobuf"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "kms_aead_test",
    srcs = ["kms_aead_test.py"],
    tags = ["manual"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        requirement("protobuf"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
    ],
)

py_test(
    name = "aead_consistency_test",
    srcs = ["aead_consistency_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/proto:aes_ctr_hmac_aead_py_pb2",
        "@tink_py//tink/proto:aes_eax_py_pb2",
        "@tink_py//tink/proto:aes_gcm_py_pb2",
        "@tink_py//tink/proto:common_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "deterministic_aead_test",
    srcs = ["deterministic_aead_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/daead",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "streaming_aead_test",
    srcs = ["streaming_aead_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        "@tink_py//tink/testing:keyset_builder",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/streaming_aead",
    ],
)

py_test(
    name = "mac_test",
    srcs = ["mac_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/mac",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "signature_test",
    srcs = ["signature_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/signature",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "hybrid_encryption_test",
    srcs = ["hybrid_encryption_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/daead",
        "@tink_py//tink/hybrid",
        "@tink_py//tink/proto:common_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "prf_set_test",
    srcs = ["prf_set_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/prf",
        "@tink_py//tink/testing:keyset_builder",
    ],
)

py_test(
    name = "jwt_test",
    srcs = ["jwt_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/jwt",
    ],
)

py_test(
    name = "jwt_validation_test",
    srcs = ["jwt_validation_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        requirement("absl-py"),
        "@tink_py//tink:cleartext_keyset_handle",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/jwt",
        "@tink_py//tink/mac",
        "@tink_py//tink/proto:common_py_pb2",
        "@tink_py//tink/proto:hmac_py_pb2",
        "@tink_py//tink/proto:jwt_hmac_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "jwt_kid_test",
    srcs = ["jwt_kid_test.py"],
    deps = [
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        requirement("absl-py"),
        "@tink_py//tink:tink_python",
        "@tink_py//tink/jwt",
        "@tink_py//tink/proto:common_py_pb2",
        "@tink_py//tink/proto:jwt_ecdsa_py_pb2",
        "@tink_py//tink/proto:jwt_hmac_py_pb2",
        "@tink_py//tink/proto:jwt_rsa_ssa_pkcs1_py_pb2",
        "@tink_py//tink/proto:jwt_rsa_ssa_pss_py_pb2",
        "@tink_py//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "key_template_consistency_test",
    srcs = ["key_template_consistency_test.py"],
    deps = [
        "//util:utilities",
        requirement("absl-py"),
        "//tink_config",
        "//util:key_util",
        "//util:testing_servers",
        "@tink_py//tink:tink_python",
    ],
)

py_test(
    name = "keyset_read_write_test",
    srcs = ["keyset_read_write_test.py"],
    deps = [
        "//util:utilities",
        requirement("absl-py"),
        "//tink_config",
        "//util:key_util",
        "//util:testing_servers",
        "@com_google_protobuf//:protobuf_python",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/aead",
        "@tink_py//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "primitive_creation_test",
    srcs = ["primitive_creation_test.py"],
    deps = [
        requirement("absl-py"),
        "//tink_config",
        "//util:testing_servers",
        "//util:utilities",
        "//util/test_keys",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/proto:tink_py_pb2",
    ],
)
